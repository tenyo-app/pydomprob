# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  - push

jobs:
  pylint:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]

    steps:
      - uses: actions/checkout@v4

      - name: astral-sh/setup-uv
        uses: astral-sh/setup-uv@v5.1.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Pylint (python: ${{ matrix.python-version }})"
        run: make pylint

  black:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]

    steps:
      - uses: actions/checkout@v4

      - name: astral-sh/setup-uv
        uses: astral-sh/setup-uv@v5.1.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Black (python: ${{ matrix.python-version }})"
        run: make black-check

  mypy:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]

    steps:
      - uses: actions/checkout@v4

      - name: astral-sh/setup-uv
        uses: astral-sh/setup-uv@v5.1.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Mypy (python: ${{ matrix.python-version }})"
        run: make mypy

  unit-tests:
    runs-on: ubuntu-24.04
    needs:
      - pylint
      - black
      - mypy
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: astral-sh/setup-uv
        uses: astral-sh/setup-uv@v5.1.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Unit test (python: ${{ matrix.python-version }})"
        run: make test-unit

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: htmlcov

  functional-tests:
    runs-on: ubuntu-24.04
    needs:
      - pylint
      - black
      - mypy
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: astral-sh/setup-uv
        uses: astral-sh/setup-uv@v5.1.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Functional test (python: ${{ matrix.python-version }})"
        run: make test-functional

  build-package:
    runs-on: ubuntu-24.04
    needs:
      - unit-tests
      - functional-tests

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5.1.0

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: "Build package"
        run: uv build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  doc-tests:
    runs-on: ubuntu-24.04
    needs:
      - unit-tests
      - functional-tests
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]

    steps:
      - uses: actions/checkout@v4

      - name: astral-sh/setup-uv
        uses: astral-sh/setup-uv@v5.1.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Documentation test (python: ${{ matrix.python-version }})"
        run: make doctest

  build-docs:
    runs-on: ubuntu-24.04
    needs:
      - doc-tests

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5.1.0

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: "Build documentation"
        run: make docs

      - name: Upload docs
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs/_build/html

  deploy-docs:
    runs-on: ubuntu-24.04
    if: success() && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main')
    needs:
      - build-docs
      - build-package

    steps:
      - uses: actions/checkout@v4

      - name: "Trigger docs deployment"
        env:
          READTHEDOCS_TOKEN: ${{ secrets.READTHEDOCS_TOKEN }}
          DOCS_BRANCH: ${{ github.head_ref || github.ref_name }}  # Gets current branch/PR
        run: |
          make docs-deploy docs_branch=$DOCS_BRANCH
          build_id=$(curl -s -H "Authorization: Token $READTHEDOCS_TOKEN" \
            "https://readthedocs.org/api/v2/webhook/domprob/289113/" | jq -r '.results[0].id')
          echo "Build ID: $build_id"
          echo "build_id=$build_id" >> $GITHUB_ENV
